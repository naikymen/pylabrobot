import math
from typing import Optional

from pylabrobot.resources.container import Container


class Well(Container):
  """ Base class for Well resources.

  Note that in regular use these will be automatically generated by the
  :class:`pylabrobot.resources.Plate` class.
  """

  def __init__(self, name: str, size_x: float, size_y: float, size_z: float = 9,
    category: str = "well", volume: float = 0, max_volume: Optional[float] = None,
    model: Optional[str] = None):
    """ Create a new well.

    Args:
      name: Name of the well.
      size_x: Size of the well in the x direction.
      size_y: Size of the well in the y direction.
      size_z: Size of the well in the z direction.
      category: Category of the well.
      volume: Initial volume of the well.
      max_volume: Maximum volume of the well. If not specified, the well will be seen as a cylinder
        and the max volume will be computed based on size_x, size_y, and size_z.
    """

    if max_volume is None:
      assert size_x == size_y, "Well max volume computation currently assumes circular wells"
      max_volume = math.pi * (size_x / 2) ** 2 * size_z

    super().__init__(name, size_x=size_x, size_y=size_y, size_z=size_z, category=category,
      volume=volume, max_volume=max_volume, model=model)
